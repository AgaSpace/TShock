<Project Sdk="Microsoft.NET.Sdk">
<!--<Project Sdk="Microsoft.NET.Sdk.Web"> for docker to work using the DefaultContainer profile -->

	<PropertyGroup>
		<OutputType>Exe</OutputType>
		<TargetFramework>net6.0</TargetFramework>
		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>enable</Nullable>
		<AssemblyName>TShock.Server</AssemblyName> <!-- TShock was initially decided on by a community poll, however tshock already exists as a folder and will clash -->
		<RunPostBuildEvent>Always</RunPostBuildEvent>
		<DebugType>embedded</DebugType>
		<IncludeNativeLibrariesForSelfExtract>true</IncludeNativeLibrariesForSelfExtract> <!-- needed for sqlite native libs -->
    <ContainerImageName>tshock</ContainerImageName>
    <Version>5.0.0-beta</Version>
	</PropertyGroup>

	<ItemGroup>
		<ProjectReference Include="..\TerrariaServerAPI\TerrariaServerAPI\TerrariaServerAPI.csproj" ExcludeFromSingleFile="true" />
    <Reference Include="HttpServer" ExcludeFromSingleFile="true">
      <HintPath>..\prebuilts\HttpServer.dll</HintPath>
    </Reference>
    
    <!-- allow the plugins to be built & copied to ./plugins, but not referenced. -->
    <ProjectReference Include="..\TShockAPI\TShockAPI.csproj" ExcludeFromSingleFile="true" ReferenceOutputAssembly="false" />
    <ProjectReference Include="..\TShockCommands\TShockCommands.csproj" ExcludeFromSingleFile="true" ReferenceOutputAssembly="false" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="BCrypt.Net-Next" Version="4.0.3" />
		<PackageReference Include="Microsoft.NET.Build.Containers" Version="0.1.8" />
		<PackageReference Include="MySql.Data" Version="8.0.30" />
		<PackageReference Include="Microsoft.Data.Sqlite" Version="6.0.8" />
		<PackageReference Include="ModFramework" Version="1.1.1-alpha" GeneratePathProperty="true" /> <!-- only used to extract out to ./bin. -->
		<PackageReference Include="NLog.Extensions.Logging" Version="5.0.4" /> <!-- allow the dll to be included -->
		<PackageReference Include="EasyCommands" Version="1.2.4" />  <!-- allow the dll to be included -->

		<!-- the launcher doesnt need the direct OTAPI reference, but since PackageReference[ExcludeFromSingleFile] doesnt work, exclude the assets and copy manually -->
		<PackageReference Include="OTAPI.Upcoming" Version="3.1.3-alpha" ExcludeAssets="all" GeneratePathProperty="true" />
		<None Include="$(PkgOTAPI_Upcoming)\lib\net6.0\OTAPI.dll">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
			<ExcludeFromSingleFile>true</ExcludeFromSingleFile>
		</None>
		<None Include="$(PkgOTAPI_Upcoming)\lib\net6.0\OTAPI.Runtime.dll">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
			<ExcludeFromSingleFile>true</ExcludeFromSingleFile>
		</None>
		<None Include="$(PkgModFramework)\lib\net6.0\ModFramework.dll">
		  <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		  <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
		</None>
	</ItemGroup>

	<Target Name="CreateServerPlugins" AfterTargets="PostBuildEvent;Publish">
		<MakeDir Directories="$(OutDir)plugins" />
		<MakeDir Directories="$(PublishDir)plugins" />
		<ItemGroup>
			<ApiFiles Include="$(ProjectDir)../TShockAPI/bin/$(Configuration)/$(TargetFramework)/TShockAPI*" />
			<CommandFiles Include="$(ProjectDir)../TShockCommands/bin/$(Configuration)/$(TargetFramework)/TShockCommands*" />
		</ItemGroup>
    <Copy SourceFiles="@(ApiFiles)" DestinationFolder="$(OutDir)plugins" ContinueOnError="true" />
    <Copy SourceFiles="@(ApiFiles)" DestinationFolder="$(PublishDir)plugins" ContinueOnError="true" />
    <Copy SourceFiles="@(CommandFiles)" DestinationFolder="$(OutDir)plugins" ContinueOnError="true" />
    <Copy SourceFiles="@(CommandFiles)" DestinationFolder="$(PublishDir)plugins" ContinueOnError="true" />
	</Target>
	<Target Name="MoveBin" AfterTargets="Publish">
		<ItemGroup>
			<MoveBinaries Include="$(PublishDir)*" Exclude="$(PublishDir)\TShock.Server*" />
		</ItemGroup>
		<Move SourceFiles="@(MoveBinaries)" DestinationFolder="$(PublishDir)bin" ContinueOnError="true" />
	</Target>
</Project>